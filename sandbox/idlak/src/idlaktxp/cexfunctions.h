// idlaktxp/cexfunctions.h

// Copyright 2013 CereProc Ltd.  (Author: Matthew Aylett)

// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//  http://www.apache.org/licenses/LICENSE-2.0
//
// THIS CODE IS PROVIDED *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
// WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
// MERCHANTABLITY OR NON-INFRINGEMENT.
// See the Apache 2 License for the specific language governing permissions and
// limitations under the License.
//

// Automatically generated: Wed Jul 31 15:53:53 2013

#ifndef KALDI_IDLAKTXP_CEXFUNCTIONS_H
#define KALDI_IDLAKTXP_CEXFUNCTIONS_H

// This file autogenerated by running create_catalog.py
// Do not edit manually

#include "idlaktxp/txpcexspec.h"

namespace kaldi {

#define CEX_NO_FEATURES 21

bool CexFuncStringBackwardBackwardPhone(const TxpCexspec* cex,
                      const TxpCexspecFeat* feat,
                      const TxpCexspecContext* context,
                      std::string* buffer);

bool CexFuncStringBackwardPhone(const TxpCexspec* cex,
                     const TxpCexspecFeat* feat,
                     const TxpCexspecContext* context,
                     std::string* buffer);

bool CexFuncStringPhone(const TxpCexspec* cex,
                    const TxpCexspecFeat* feat,
                    const TxpCexspecContext* context,
                    std::string* buffer);

bool CexFuncStringForwardPhone(const TxpCexspec* cex,
                     const TxpCexspecFeat* feat,
                     const TxpCexspecContext* context,
                     std::string* buffer);

bool CexFuncStringForwardForwardPhone(const TxpCexspec* cex,
                     const TxpCexspecFeat* feat,
                     const TxpCexspecContext* context,
                     std::string* buffer);

bool CexFuncIntSegmentLocationFromFront(const TxpCexspec* cex,
                     const TxpCexspecFeat* feat,
                     const TxpCexspecContext* context,
                     std::string* buffer);

bool CexFuncIntSegmentLocationFromBack(const TxpCexspec* cex,
                     const TxpCexspecFeat* feat,
                     const TxpCexspecContext* context,
                     std::string* buffer);

bool CexFuncIntBackwardSyllableNumPhones(const TxpCexspec* cex,
                     const TxpCexspecFeat* feat,
                     const TxpCexspecContext* context,
                     std::string* buffer);

bool CexFuncIntSyllableNumPhones(const TxpCexspec* cex,
                     const TxpCexspecFeat* feat,
                     const TxpCexspecContext* context,
                     std::string* buffer);

bool CexFuncIntForwardSyllableNumPhones(const TxpCexspec* cex,
                     const TxpCexspecFeat* feat,
                     const TxpCexspecContext* context,
                     std::string* buffer);

bool CexFuncIntBackwardSyllableStress(const TxpCexspec* cex,
                     const TxpCexspecFeat* feat,
                     const TxpCexspecContext* context,
                     std::string* buffer);

bool CexFuncIntSyllableStress(const TxpCexspec* cex,
                     const TxpCexspecFeat* feat,
                     const TxpCexspecContext* context,
                     std::string* buffer);

bool CexFuncIntForwardSyllableStress(const TxpCexspec* cex,
                     const TxpCexspecFeat* feat,
                     const TxpCexspecContext* context,
                     std::string* buffer);

bool CexFuncStringBackwardWordPosTag(const TxpCexspec* cex,
                     const TxpCexspecFeat* feat,
                     const TxpCexspecContext* context,
                     std::string* buffer);

bool CexFuncStringWordPosTag(const TxpCexspec* cex,
                     const TxpCexspecFeat* feat,
                     const TxpCexspecContext* context,
                     std::string* buffer);

bool CexFuncStringForwardWordPosTag(const TxpCexspec* cex,
                     const TxpCexspecFeat* feat,
                     const TxpCexspecContext* context,
                     std::string* buffer);

bool CexFuncIntBackwardWordNumSyls(const TxpCexspec* cex,
                     const TxpCexspecFeat* feat,
                     const TxpCexspecContext* context,
                     std::string* buffer);

bool CexFuncIntWordNumSyls(const TxpCexspec* cex,
                     const TxpCexspecFeat* feat,
                     const TxpCexspecContext* context,
                     std::string* buffer);

bool CexFuncIntForwardWordNumSyls(const TxpCexspec* cex,
                     const TxpCexspecFeat* feat,
                     const TxpCexspecContext* context,
                     std::string* buffer);

bool CexFuncIntPhraseNumWords(const TxpCexspec* cex,
                     const TxpCexspecFeat* feat,
                     const TxpCexspecContext* context,
                     std::string* buffer);

bool CexFuncStringPhraseTobiEndTone(const TxpCexspec* cex,
                     const TxpCexspecFeat* feat,
                     const TxpCexspecContext* context,
                     std::string* buffer);



}  // namespace kaldi

#endif  // KALDI_IDLAKTXP_CEXFUNCTIONS_H_
