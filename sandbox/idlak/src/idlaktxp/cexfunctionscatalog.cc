// idlaktxp/cexfunctionscatalog.cc

// Copyright 2013 CereProc Ltd.  (Author: Matthew Aylett)

// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//  http://www.apache.org/licenses/LICENSE-2.0
//
// THIS CODE IS PROVIDED *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
// WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
// MERCHANTABLITY OR NON-INFRINGEMENT.
// See the Apache 2 License for the specific language governing permissions and
// limitations under the License.
//

// Automatically generated: Wed Jul 31 15:53:53 2013

// This file autogenerated by running create_catalog.py
// Do not edit manually

#include "idlaktxp/txpcexspec.h"
#include "idlaktxp/cexfunctions.h"

namespace kaldi {

const char* const CEXFUNCLBL[] = {"BackwardBackwardPhone", "BackwardPhone", "Phone", "ForwardPhone", "ForwardForwardPhone", "SegmentLocationFromFront", "SegmentLocationFromBack", "BackwardSyllableNumPhones", "SyllableNumPhones", "ForwardSyllableNumPhones", "BackwardSyllableStress", "SyllableStress", "ForwardSyllableStress", "BackwardWordPosTag", "WordPosTag", "ForwardWordPosTag", "BackwardWordNumSyls", "WordNumSyls", "ForwardWordNumSyls", "PhraseNumWords", "PhraseTobiEndTone"};

const cexfunction CEXFUNC[] = {&CexFuncStringBackwardBackwardPhone, &CexFuncStringBackwardPhone, &CexFuncStringPhone, &CexFuncStringForwardPhone, &CexFuncStringForwardForwardPhone, &CexFuncIntSegmentLocationFromFront, &CexFuncIntSegmentLocationFromBack, &CexFuncIntBackwardSyllableNumPhones, &CexFuncIntSyllableNumPhones, &CexFuncIntForwardSyllableNumPhones, &CexFuncIntBackwardSyllableStress, &CexFuncIntSyllableStress, &CexFuncIntForwardSyllableStress, &CexFuncStringBackwardWordPosTag, &CexFuncStringWordPosTag, &CexFuncStringForwardWordPosTag, &CexFuncIntBackwardWordNumSyls, &CexFuncIntWordNumSyls, &CexFuncIntForwardWordNumSyls, &CexFuncIntPhraseNumWords, &CexFuncStringPhraseTobiEndTone};


// Return type
// Int - integer either a count or a class
// String - a string, part of a defined set of possible values listed in
//       cex-default.xml
const enum CEXSPEC_TYPE CEXFUNCTYPE[] = {CEXSPEC_TYPE_STR, CEXSPEC_TYPE_STR, CEXSPEC_TYPE_STR, CEXSPEC_TYPE_STR, CEXSPEC_TYPE_STR, CEXSPEC_TYPE_INT, CEXSPEC_TYPE_INT, CEXSPEC_TYPE_INT, CEXSPEC_TYPE_INT, CEXSPEC_TYPE_INT, CEXSPEC_TYPE_INT, CEXSPEC_TYPE_INT, CEXSPEC_TYPE_INT, CEXSPEC_TYPE_STR, CEXSPEC_TYPE_STR, CEXSPEC_TYPE_STR, CEXSPEC_TYPE_INT, CEXSPEC_TYPE_INT, CEXSPEC_TYPE_INT, CEXSPEC_TYPE_INT, CEXSPEC_TYPE_STR};

}  // namespace kaldi
