// doc/idlakcex.dox

// Copyright 2013 University of Edinburgh

// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at

//  http://www.apache.org/licenses/LICENSE-2.0

// THIS CODE IS PROVIDED *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
// WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
// MERCHANTABLITY OR NON-INFRINGEMENT.
// See the Apache 2 License for the specific language governing permissions and
// limitations under the License.

/**
 \page idlakcex The Idlak context extraction system

 @section idlakcex_intro Introduction

In order to train our speech synthesiser, we need to extract information about the 
context in which each phone exists. For example, desirable information might be the 
phones in proximity to it, its position within the segement or syllabic stress. The 
role of idlakcex is to take the idlaktxp output and perform this extraction.

It outputs a string for each phone, which consists of values separated by unique 
delimiters, indicating which context feature the subsequent value pertains to.

@section idlakcex_archi Architecture

The system's primary mode of action is to run each of the context extraction functions. 
The developer writes the function bodies, adhering to a function naming convention to be 
explained later, whilst the header file and a macro for calling them all are automatically 
generated by a Python script.

The functions themselves must also be described in an XML file, including the following 
information:

 - \b delim: The delimiter to be used in the output string, ahead of this feature's value.

 - \b htsname: The name by which the feature is referred to in HTS.

 - \b desc: A short description of the feature's purpose.

 - \b name: The name of the feature. This is used as part of the function name in the C++ 
file, so should conform to those standards.

 - \b min (optional): The minimum acceptable value for this feature.

 - \b max (optional): The maximum acceptable value for this feature.

 - \b set (optional): If this feature is to have non-integer values, the set from which 
possible values should be drawn.

 - \b pauctx (optional): Whether or not context should continue (as opposed to being blocked) 
when meeting two consecutive pauses.

If the 'set' attribute is used, a set element must be defined, using the same name, which 
enumerates all possible values for the set.

Below is an example of such an XML file:

 \verbatim
<fex maxfieldlen="3" pausehandling="SPT">
  <!-- Sets must be specified before feature functions that depend on them -->
  <set name="phone" null="X">
    <item name="pau"/>
    <item name="aa"/>
    <item name="ae"/>
    <item name="ah"/>
    <item name="ao"/>
    <item name="aw"/>
    <item name="ax"/>
    <item name="ay"/>
    <item name="b"/>
    <item name="ch"/>
    <item name="d"/>
    <item name="dx"/>
    <item name="dh"/>
    <item name="eh"/>
    <item name="er"/>
    <item name="ey"/>
    <item name="f"/>
    <item name="g"/>
    <item name="hh"/>
    <item name="ih"/>
    <item name="iy"/>
    <item name="jh"/>
    <item name="k"/>
    <item name="l"/>
    <item name="m"/>
    <item name="n"/>
    <item name="ng"/>
    <item name="ow"/>
    <item name="oy"/>
    <item name="p"/>
    <item name="r"/>
    <item name="s"/>
    <item name="sh"/>
    <item name="t"/>
    <item name="th"/>
    <item name="uh"/>
    <item name="uw"/>
    <item name="v"/>
    <item name="w"/>
    <item name="y"/>
    <item name="z"/>
    <item name="zh"/>
    <item name="sil"/>
    <item name="X"/>
  </set>
  <set name="pos" null="X">
    <item name="CC"/>
    <item name="CD"/>
    <item name="DT"/>
    <item name="EX"/>
    <item name="FW"/>
    <item name="IN"/>
    <item name="IN/that"/>
    <item name="JJ"/>
    <item name="JJR"/>
    <item name="JJS"/>
    <item name="LS"/>
    <item name="MD"/>
    <item name="NN"/>
    <item name="NNS"/>
    <item name="NP"/>
    <item name="NPS"/>
    <item name="PDT"/>
    <item name="POS"/>
    <item name="PP"/>
    <item name="PP$"/>
    <item name="RB"/>
    <item name="RBR"/>
    <item name="RBS"/>
    <item name="RP"/>
    <item name="SENT"/>
    <item name="SYM"/>
    <item name="TO"/>
    <item name="UH"/>
    <item name="VB"/>
    <item name="VBD"/>
    <item name="VBG"/>
    <item name="VBN"/>
    <item name="VBP"/>
    <item name="VBZ"/>
    <item name="VD"/>
    <item name="VDD"/>
    <item name="VDG"/>
    <item name="VDN"/>
    <item name="VDP"/>
    <item name="VDZ"/>
    <item name="VHB"/>
    <item name="VHD"/>
    <item name="VHI"/>
    <item name="VHP"/>
    <item name="VHZ"/>
    <item name="VV"/>
    <item name="VVD"/>
    <item name="VVG"/>
    <item name="VVN"/>
    <item name="VVP"/>
    <item name="VVZ"/>
    <item name="WDT"/>
    <item name="WP"/>
    <item name="WP$"/>
    <item name="WRB"/>
    <item name=":"/>
    <item name="$"/>
    <item name="PAU"/>
    <item name="X"/>
  </set>
  <set name="tone" null="X">
    <item name="LH"/>
    <item name="LL"/>
    <item name="X"/>
  </set>
  <feat delim="^" htsname="LL" desc="phone_before_before" name="BackwardBackwardPhone" set="phone" pauctx="false">
    <mapping fromstr="X" tostr="sil"/>
  </feat>
  <feat delim="~" htsname="L" desc="phone_before" name="BackwardPhone" set="phone" pauctx="false">
    <mapping fromstr="X" tostr="sil"/>
  </feat>
  <feat delim="-" htsname="C" desc="current_phone" name="Phone" set="phone" pauctx="false">
    <mapping fromstr="X" tostr="sil"/>
  </feat>
  <feat delim="+" htsname="R" desc="phone_forward" name="ForwardPhone" set="phone" pauctx="false">
    <mapping fromstr="X" tostr="sil"/>
  </feat>
  <feat delim="=" htsname="RR" desc="phone_forward_forward" name="ForwardForwardPhone" set="phone" pauctx="false">
    <mapping fromstr="X" tostr="sil"/>
  </feat>
  <feat delim="/00:" htsname="Seg_Fw" desc="segment_location_from_front" name="SegmentLocationFromFront" min="0" max="7" >
  <feat delim="/01:" htsname="Seg_Bw" desc="segment_location_from_back" name="SegmentLocationFromBack" min="0" max="7" />
  <feat delim="/02:" htsname="L-Syl_Stress" desc="left_syllabic_stress" name="BackwardSyllableStress" min="0" max="1" pauctx="false" />
  <feat delim="/03:" htsname="C-Syl_Stress" desc="current_syllabic_stress" name="SyllableStress" min="0" max="1" pauctx="false" />
  <feat delim="/04:" htsname="R-Syl_Stress" desc="right_syllabic_stress" name="ForwardSyllableStress" min="0" max="1" pauctx="false" />
  <feat delim="/05:" htsname="L-Word_GPOS" desc="left_part_of_speech" name="BackwardWordPosTag" set="pos" pauctx="false" />
  <feat delim="/06:" htsname="C-Word_GPOS" desc="part_of_speech" name="WordPosTag" set="pos" pauctx="false" />
  <feat delim="/07:" htsname="R-Word_GPOS" desc="right_part_of_speech" name="ForwardWordPosTag" set="pos" pauctx="false" />
  <feat delim="/08:" htsname="L-Syl_Num-Segs" desc="left_syllable_no_segments" name="BackwardSyllableNumPhones" min="0" max="7"/>
  <feat delim="/09:" htsname="C-Syl_Num-Segs" desc="current_syllable_no_segments" name="SyllableNumPhones" min="0" max="7"/>
  <feat delim="/10:" htsname="R-Syl_Num-Segs" desc="right_syllable_no_segments" name="ForwardSyllableNumPhones" min="0" max="7"/>
  <feat delim="/11:" htsname="L-Word_Num-Syls" desc="-" name="BackwardWordNumSyls" min="0" max="7"/>
  <feat delim="/12:" htsname="C-Word_Num-Syls" desc="-" name="WordNumSyls" min="0" max="7"/>
  <feat delim="/13:" htsname="R-Word_Num-Syls" desc="-" name="ForwardWordNumSyls" min="0" max="7"/>
  <feat delim="/14:" htsname="C-Phrase_Num-Words" desc="-" name="PhraseNumWords" min="0" max="30"/>
  <feat delim="/17:" htsname="C-Phrase_TOBI_End-tone" desc="-" name="PhraseTobiEndTone" set="tone"/>
</fex>
\endverbatim



*/
